module DataTypes.Primitives.Numeric.Integer {

    function synonyms() {
        i8:int8 = 0
        i16:int16 = 0
        i32:int32 = 0
        i64:int64 = 0
    }
    
    function integer8_operations() {
        i:integer8 := 0
        i := i + 2
        i := i - 1
        i := i * 3
        i := i / 2
        i += 13
        i -= 12
        i *= 2
        i /= 2
        ma = Integer8.max
        mi = Integer8.min
    }

    function integer16_operations() {
        i:integer16 := 0
        i := i + 2
        i := i - 1
        i := i * 3
        i := i / 2
        i += 13
        i -= 12
        i *= 2
        i /= 2
        ma = Integer16.max
        mi = Integer16.min
    }

    function integer32_operations() {
        i:integer32 := 0.0
        i := i + 1.3
        i := i - 1.2
        i := i * 2.2
        i := i / 2.3
        i += 13.1
        i -= 12.1
        i *= 22.1
        i /= 23.1
        ma = Integer32.max
        mi = Integer32.min
    }

    function integer64_operations() {
        i:integer64 := 0
        i := i + 2
        i := i - 1
        i := i * 3
        i := i / 2
        i += 13
        i -= 12
        i *= 22
        i /= 23
        ma = Integer64.max
        mi = Integer64.min
    }

    function conversion() {
        d:int64 := 1
        f32 = r.as[float32]
        d32 = r.as[dec32]
    }
}
