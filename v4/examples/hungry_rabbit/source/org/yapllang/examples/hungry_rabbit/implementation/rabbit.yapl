------------------------------------------------------------------------------------------------------------------------
-- Contains the Rabbit class, an abstraction for a hungry, foraging rabbit
------------------------------------------------------------------------------------------------------------------------
module rabbit

from garden import Garden
from types import Matrix, Carrots, Position

------------------------------------------------------------------------------------------------------------------------
-- An abstraction for a hungry, foraging, rabbit
------------------------------------------------------------------------------------------------------------------------
export class Rabbit

    public initializers

        ----------------------------------------------------------------------------------------------------------------
        -- Initialize a Rabbit
        ----------------------------------------------------------------------------------------------------------------
        initialize new instance
            accepts
                forage_in_garden:Garden -- the Garden that the Rabbit should forage in
            body
                garden = forage_in_garden
                possible_centers = garden.get_possible_centers()
                position = choose_best_square(squares=possible_centers)


    public instance methods

        ----------------------------------------------------------------------------------------------------------------
        -- Make the rabbit go foraging for carrots in the garden.
        ----------------------------------------------------------------------------------------------------------------
        method forage
            returns
                eaten:Carrots -- the number of carrots that the rabbit ate during its foraging spree
            body
                eaten ~= 0
                repeat
                    eaten ~= eaten + eat_carrots()
                while should_move = move()
                return eaten


    private instance state

        ----------------------------------------------------------------------------------------------------------------
        -- The 'Garden' that this Rabbit is foraging in
        ----------------------------------------------------------------------------------------------------------------
        garden:Garden

        ----------------------------------------------------------------------------------------------------------------
        -- The position of this Rabbit within 'garden'
        ----------------------------------------------------------------------------------------------------------------
        position:Position {mutable}


    private instance methods

        ----------------------------------------------------------------------------------------------------------------
        -- Choose the best square to forage in next, from among the specified squares
        ----------------------------------------------------------------------------------------------------------------
        method choose_best_square
            accepts
                squares:[Position] -- the squares to choose from
            returns
                best_square:Position -- the square that was determined to be the best
            body
                return best_square = squares.max_by(garden.get_carrots) -- xcxc


        ----------------------------------------------------------------------------------------------------------------
        -- Eat the carrots at the rabbit's current position
        ----------------------------------------------------------------------------------------------------------------
        method eat_carrots
            returns
                eaten:Carrots -- The number of carrots that were eaten
            body
                return eaten = garden.eat_carrots(at_position=position)


        ----------------------------------------------------------------------------------------------------------------
        -- Move the rabbit to the best possible square, from the current position, for foraging.
        ----------------------------------------------------------------------------------------------------------------
        method move
            returns
                moved:boolean -- True if the rabbit moved. False otherwise
            body
                choices = garden.get_possible_moves(around_position=position)
                if is_empty = choices are empty
                    -- #nowhere_left_to_go: the rabbit has no further options
                    return moved = false
                else
                    -- #still_places_to_go: the rabbit can move to another garden square and continue foraging
                    position ~= choose_best_square(squares=choices)
                    return moved = true
