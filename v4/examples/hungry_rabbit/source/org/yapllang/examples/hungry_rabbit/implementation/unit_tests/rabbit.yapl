------------------------------------------------------------------------------------------------------------------------
-- Contains unit tests for the rabbit module
------------------------------------------------------------------------------------------------------------------------
unit test suite for Rabbit

unit test `rabbit:Rabbit > public instance initializers > initialize instance`

    --------------------------------------------------------------------------------------------------------------------
    -- the constructor stores the provided initial garden
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that garden is fake Garden
            that squares is fake [Position]
            that best_square is new Position(row=0, column=0)
            that rabbit.choose_best_square(squares) returns best_square
        when
            rabbit = new Rabbit(garden)
        then
            rabbit.garden == garden
            rabbit.position == new Position(row=0, column=0)


unit test `rabbit:Rabbit > public instance methods > forage`

    --------------------------------------------------------------------------------------------------------------------
    -- there is nothing to eat, and nowhere to go
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that rabbit is fake Rabbit
            that rabbit.eat_carrots() returns eaten = 0
            that rabbit.move() returns moved = false
        when
            eaten = rabbit.forage()
        then
            eaten == 0

    --------------------------------------------------------------------------------------------------------------------
    -- there is something to eat, but nowhere to go
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that rabbit is fake Rabbit
            that rabbit.eat_carrots() returns eaten = 1
            that rabbit.move() returns moved = false
        when
            eaten = rabbit.forage()
        then
            eaten == 1

    --------------------------------------------------------------------------------------------------------------------
    -- there is something to eat, and somewhere to go
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that rabbit is fake Rabbit
            that rabbit.eat_carrots() returns eaten = 2
            that rabbit.move() returns moved = true
            that rabbit.eat_carrots() returns eaten = 1
            that rabbit.move() returns moved = false
        when
            eaten = rabbit.forage()
        then
            eaten == 3


unit test `rabbit:Rabbit > private instance methods > choose_best_square`

    --------------------------------------------------------------------------------------------------------------------
    -- there is only a single option
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that rabbit is fake Rabbit
            that position is new Position(row=0, column=0)
            that rabbit.garden.get_carrots(at_position=position) returns carrots = 0
        when
            squares = [ position ]
            best_square = rabbit.choose_best_square(squares)
        then
            best_square == new Position(row=0, column=0)


    --------------------------------------------------------------------------------------------------------------------
    -- there are two options to choose from
    --------------------------------------------------------------------------------------------------------------------
    scenario
        given
            that rabbit is fake Rabbit
            that position_1 is new Position(row=0, column=0)
            that position_2 is new Position(row=0, column=1)
            that rabbit.garden.get_carrots(at_position=position_1) returns carrots = 0
            that rabbit.garden.get_carrots(at_position=position_2) returns carrots = 1
        when
            squares = [ position_1, position_2 ]
            best_square = rabbit.choose_best_square(squares)
        then
            best_square == new Position(row=0, column=1)
